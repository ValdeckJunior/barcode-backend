// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  matricule     String         @unique
  email         String         @unique
  password      String
  role          Role
  faculty       String
  department    String
  semester      String
  level         String
  academicYear  String
  registrations Registration[]
  attendances   Attendance[]
  results       Result[]
}

enum Role {
  STUDENT
  ADMIN
}

model Course {
  id            Int            @id @default(autoincrement())
  code          String         @unique
  title         String
  registrations Registration[]
  attendances   Attendance[]
  results       Result[]
}

model Registration {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int

  @@unique([userId, courseId])
}

model Attendance {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  course   Course   @relation(fields: [courseId], references: [id])
  courseId Int
  date     DateTime

  @@unique([userId, courseId, date])
}

model Result {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
  score    Int

  @@unique([userId, courseId])
}
